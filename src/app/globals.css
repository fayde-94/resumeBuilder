@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --PhoneInput-color--focus: #536bb9;
    --PhoneInputInternationalIconPhone-opacity: 0.8;
    --PhoneInputInternationalIconGlobe-opacity: 0.65;
    --PhoneInputCountrySelect-marginRight: 0.35em;
    --PhoneInputCountrySelectArrow-width: 0.3em;
    --PhoneInputCountrySelectArrow-marginLeft: var(
      --PhoneInputCountrySelect-marginRight
    );
    --PhoneInputCountrySelectArrow-borderWidth: 2px;
    --PhoneInputCountrySelectArrow-opacity: 0.45;
    --PhoneInputCountrySelectArrow-color: currentColor;
    --PhoneInputCountrySelectArrow-color--focus: var(--PhoneInput-color--focus);
    --PhoneInputCountrySelectArrow-transform: rotate(45deg);
    --PhoneInputCountryFlag-aspectRatio: 1.5;
    --PhoneInputCountryFlag-height: 1em;
    --PhoneInputCountryFlag-borderWidth: 0px;
    --PhoneInputCountryFlag-borderColor: rgba(0, 0, 0, 0.5);
    --PhoneInputCountryFlag-borderColor--focus: var(--PhoneInput-color--focus);
    --PhoneInputCountryFlag-backgroundColor--loading: rgba(0, 0, 0, 0.1);

    --background: 220 30% 85%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 220 50% 50%;
    --radius: 0.5rem;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
  }

  .wow {
    background-color: hsl(213, 27%, 84%);
  }

  .dark {
    --background: 220 20% 5%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 220 15% 40%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border custom-scrollbar m-0 p-0;
  }
  body {
    @apply dark bg-background text-foreground font-medium text-lg overflow-x-hidden  transition-transform duration-300;
  }
  main {
    @apply overflow-x-hidden;
  }
}
/* width */
.custom-scrollbar::-webkit-scrollbar {
  width: 6px;
}

/* Track */
.custom-scrollbar::-webkit-scrollbar-track {
  background: #111;
}
.custom-scrollbar::-webkit-scrollbar-corner {
  background: #00000000;
}

/* Handle */
.custom-scrollbar::-webkit-scrollbar-thumb {
  @apply bg-sky-800 rounded-sm;
}

/* Handle on hover */
.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  @apply bg-cyan-500;
}

.brd {
  @apply border border-red-600;
}

.page {
  @apply w-full mx-auto 2xl:min-w-[660px] 2xl:max-w-min min-w-full max-w-full  gap-2 items-center flex flex-col py-6 2xl:px-2 px-0;
}

.tab {
  @apply bg-slate-800/50 shadow-md w-[90%] px-2 py-2 text-center max-h-16 rounded-lg hover:bg-slate-500/50 transition-all duration-300;
}

.field {
  @apply w-full sm:h-14 h-12 sm:text-lg indent-1 bg-[#141b30]/90 rounded-lg;
}
.textarea {
  @apply w-full sm:text-lg bg-[#141b30]/90 rounded-lg min-h-28;
}
.months {
  @apply text-slate-300 hover:text-primary underline decoration-slate-700 hover:decoration-sky-400 sm:h-14 h-12 sm:text-lg bg-transparent border-b border-sky-800 py-0 rounded-t-lg rounded-b-none;
}

.text-shadow {
  text-shadow: 0px 3px 2px rgba(43, 50, 94, 0.1);
}

.insetted {
  inset: 0 0 0 57%;
}
@property --num {
  syntax: "<percentage>";
  initial-value: 0%;
  inherits: false;
}
@property --num-2 {
  syntax: "<percentage>";
  initial-value: 0%;
  inherits: true;
}
.radialbig {
  background: radial-gradient(
    var(--num) var(--num-2) at 50% 100%,
    hsl(201, 91%, 50%) 0%,
    rgba(255, 255, 255, 0) 100%
  );
  transition: --num 1s cubic-bezier(0.03, 0.44, 0.53, 0.97),
    --num-2 1s cubic-bezier(0.03, 0.44, 0.53, 0.97);
}
.radialbig:focus-within,
.radialbig:focus,
.radialbig:focus-visible {
  --num: 50%;
  --num-2: 100%;
}

.react-colorful {
  width: auto;
  @apply rounded-full;
}
.color-picker .react-colorful {
  @apply w-full h-40;
}
.tips-li {
  @apply sm:pl-6 marker:text-sky-400 sm:-indent-[1.58rem] pl-4 -indent-5;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
}

@keyframes fade-out {
  to {
    opacity: 0;
  }
}

@keyframes slide-from-right {
  from {
    transform: translateX(0%);
  }
  to {
    transform: translateX(30%);
  }
}

@keyframes slide-to-left {
  from {
    transform: translateX(-30%);
  }
  to {
    transform: translateX(0%);
  }
}
@keyframes grow {
  from {
    transform: scale(1);
  }
}

@keyframes shrink {
  to {
    transform: scale(0.2);
  }
}

::view-transition-old(root) {
  animation: 300ms ease both fade-out,
    300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-from-right;
}

::view-transition-new(root) {
  animation: 300ms ease 90ms both fade-in,
    500ms cubic-bezier(0.4, 0, 0.2, 1) both slide-to-left;
}

.clamped-carousel {
  width: clamp(95vw, 700px, 100vw);
}

/* CSS variables. */

.PhoneInput {
  /* This is done to stretch the contents of this component. */
  display: flex;
  align-items: center;
  @apply bg-[#141b30]/90 max-h-14 rounded-lg;
}
input::placeholder {
  @apply text-muted-foreground;
}

.PhoneInputInput {
  @apply field;
}
.PhoneInputInput:focus,
.PhoneInputInput:focus-within,
.PhoneInputInput:focus-visible {
  @apply ring-0 border-0 outline-none;
}

.PhoneInputCountryIcon {
  width: calc(
    var(--PhoneInputCountryFlag-height) *
      var(--PhoneInputCountryFlag-aspectRatio)
  );
  height: var(--PhoneInputCountryFlag-height);
}

.PhoneInputCountryIcon--square {
  width: var(--PhoneInputCountryFlag-height);
}

.PhoneInputCountryIcon--border {
  /* Removed `background-color` because when an `<img/>` was still loading
	   it would show a dark gray rectangle. */
  /* For some reason the `<img/>` is not stretched to 100% width and height
	   and sometime there can be seen white pixels of the background at top and bottom. */
  background-color: var(--PhoneInputCountryFlag-backgroundColor--loading);
  /* Border is added via `box-shadow` because `border` interferes with `width`/`height`. */
  /* For some reason the `<img/>` is not stretched to 100% width and height
	   and sometime there can be seen white pixels of the background at top and bottom,
	   so an additional "inset" border is added. */
  box-shadow: 0 0 0 var(--PhoneInputCountryFlag-borderWidth)
      var(--PhoneInputCountryFlag-borderColor),
    inset 0 0 0 var(--PhoneInputCountryFlag-borderWidth)
      var(--PhoneInputCountryFlag-borderColor);
}

.PhoneInputCountryIconImg {
  /* Fixes weird vertical space above the flag icon. */
  /* https://gitlab.com/catamphetamine/react-phone-number-input/-/issues/7#note_348586559 */
  display: block;
  /* 3rd party <SVG/> flag icons won't stretch if they have `width` and `height`.
	   Also, if an <SVG/> icon's aspect ratio was different, it wouldn't fit too. */
  width: 100%;
  height: 100%;
}

.PhoneInputInternationalIconPhone {
  opacity: var(--PhoneInputInternationalIconPhone-opacity);
}

.PhoneInputInternationalIconGlobe {
  opacity: var(--PhoneInputInternationalIconGlobe-opacity);
}

/* Styling native country `<select/>`. */

.PhoneInputCountry {
  position: relative;
  align-self: stretch;
  display: flex;
  align-items: center;
  margin-right: var(--PhoneInputCountrySelect-marginRight);
  @apply bg-[#141b30]/90 max-h-14 rounded-lg pl-2;
}

.PhoneInputCountrySelect {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 1;
  border: 0;
  opacity: 0;
  cursor: pointer;
  @apply text-neutral-400 bg-black border-border;
}
option:checked {
  @apply bg-slate-900 text-neutral-100;
}

.PhoneInputCountrySelect[disabled],
.PhoneInputCountrySelect[readonly] {
  cursor: default;
}

.PhoneInputCountrySelectArrow {
  display: block;
  content: "";
  width: var(--PhoneInputCountrySelectArrow-width);
  height: var(--PhoneInputCountrySelectArrow-width);
  margin-left: var(--PhoneInputCountrySelectArrow-marginLeft);
  border-style: solid;
  border-color: var(--PhoneInputCountrySelectArrow-color);
  border-top-width: 0;
  border-bottom-width: var(--PhoneInputCountrySelectArrow-borderWidth);
  border-left-width: 0;
  border-right-width: var(--PhoneInputCountrySelectArrow-borderWidth);
  transform: var(--PhoneInputCountrySelectArrow-transform);
  opacity: var(--PhoneInputCountrySelectArrow-opacity);
}

.PhoneInputCountryIcon + .PhoneInputCountrySelectArrow {
  opacity: 1;
  color: var(--PhoneInputCountrySelectArrow-color--focus);
}

.PhoneInputCountryIcon--border {
  box-shadow: 0 0 0 var(--PhoneInputCountryFlag-borderWidth)
      var(--PhoneInputCountryFlag-borderColor--focus),
    inset 0 0 0 var(--PhoneInputCountryFlag-borderWidth)
      var(--PhoneInputCountryFlag-borderColor--focus);
}

.PhoneInputCountryIcon .PhoneInputInternationalIconGlobe {
  opacity: 1;
  color: var(--PhoneInputCountrySelectArrow-color--focus);
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  -webkit-background-clip: text;
  -webkit-text-fill-color: #ffffff;
  transition: background-color 5000s ease-in-out 0s;
  box-shadow: inset 0 0 20px 20px #23232329;
}
